# Introduction
# :PROPERTIES:
# :header-args: :comments both :tangle ./README.org
# :ID:       80A31FA5-3101-4875-BE20-03A4F640E5B5
# :END:



# [[id:80A31FA5-3101-4875-BE20-03A4F640E5B5][Introduction:1]]
I've been using my own configuration on top of the excellent
[[https://github.com/jkitchin/scimax][Scimax starter-kit]] for the past
many years. This is a reboot to reverse or study the bias, and create My
Very Own Emacs configuration. It obviously includes massive snippets of
code from Scimax, as well as other configurations I come across, not to
mention the excellent advice often received from #emacs and other
geniuses lurking in irc channels, and of course the vast internet.

#+BEGIN_QUOTE
- Note that this config is still under a great deal of flux at the
  moment and will be for the foreseeable future. I am learning elisp
  every (other) day and am rather obsessed like most Emacsers to
  optimise the entire toolset. This is an an opinionated setup.

- I would recommend studying the setup and using bits and pieces of it
  as you require, because one primary power of Emacs is being able to
  customise your tool to your needs, and discover new features. However,
  the eventual goal will also be to enable using this configuration as a
  whole for anybody interested.
#+END_QUOTE
# Introduction:1 ends here

# Overall setup
# :PROPERTIES:
# :ID:       F59AFE11-0E90-4784-8F85-25C19E704E70
# :END:


# [[id:F59AFE11-0E90-4784-8F85-25C19E704E70][Overall setup:1]]
The file ~emacs-config.org~ is the source of truth for the entire
config. This file is tangled into this README, and into init.el and
dotemacs.el. Other settings like gitignore are also tangled from the Org
file.

At the moment, around 200 source code blocks get tangled into multiple
files almost within a second. This happens every time the
emacs-config.org buffer is saved, and is barely noticable.


The init.el file is included in the git commit as it will (eventually)
enable starting up emacs with basic libraries, and loading (and if
necessary tangling) this config if one is starting from scratch on a new
machine.

Due to the above - it is important to be careful with using header
arguments for source blocks. As per current Org mode features,
specifying the header arguments, even a ~:tangle yes~, will over-ride
the file settings specified elsewhere and thus parts of the config will
never get inserted into the el files that are loaded during init.

An alternate better method to disable tangling of specific blocks would
be to comment out Org headings. It should also be possible to have a
setup wherein headings with specific tags are not tangled, similar to
the noexport tag option with typical org exports. The caveat of using
this option is that these headings will be neglected in an export to
say, something like a Hugo document.

Package management is done via the interesting straight.el. There are
other approaches like borg, using quelpa and so on that I have not
tried. However, the point is that it is better to rely on git to draw
packages rather than MELPA, which can be frustrating at times.

The last 2 headlines contain a 'Testing Area' and 'Disabled'
headline. This contains all the packages that are yet to be a part of my
main setup, or packages that I use occasionally and activate when I
need to. These are available in the raw org file in the repository of
the configuration.

General notes:
- I was initially using a single init.org file that tangled to an
  init.el file. This kind of setup makes it hard to make meaningful
  commits, especially if the init.el is also a part of the visible
  commits. After all one caveat here is still that ~some external
  library is necessary to tangle these org files into elisp files for
  loading emacs.
- I would prefer not using git hooks for the tangling because my commit
  workflow is still erratic. Sometimes, there is no change in code, but
  just some additional notes to the configuration.
# Overall setup:1 ends here

# TODO Inspirations (and other literate configurations)
# :PROPERTIES:
# :ID:       9C707625-50A5-49D4-B222-7709568CEFD2
# :END:


# [[id:9C707625-50A5-49D4-B222-7709568CEFD2][Inspirations (and other literate configurations):1]]
This is a growing and non-comprehensive list of configurations that I
admire and have liberally copied from in constructing my own.

- [[http://doc.norang.ca/org-mode.html][Bernt Hansen's very detailed Org-mode config]]
- [[http://pages.sachachua.com/.emacs.d/Sacha.html][Sacha Chua]]
- [[https://github.com/angrybacon/dotemacs/blob/master/dotemacs.org][Mathieu Marques]]
- [[https://writequit.org/org/][Lee Hinman]]
- [[https://karl-voit.at/2017/06/03/emacs-org/][Karl Voit]]
- [[https://dustinlacewell.github.io/emacs.d/][Dustin Lacewell]]
- [[https://github.com/wasamasa/dotemacs][GitHub - wasamasa/dotemacs: Literate Emacs configuration]]
- [[https://github.com/IvanMalison/dotfiles][GitHub - IvanMalison/dotfiles: Configuration files for XMonad, Emacs, NixOS, Taffybar and more.]]
- [[https://protesilaos.com/dotemacs/][GNU Emacs integrated computing environment | Protesilaos Stavrou]].

In general - code and snippet source references are added as and when
possible though this is a tedius task for those with configurations
under a great rate of flux.
# Inspirations (and other literate configurations):1 ends here

# TODO Packages I've found very useful
# :PROPERTIES:
# :ID:       86AAE7DE-B6F3-41BC-88C3-4C530F80BD5C
# :END:


# [[id:86AAE7DE-B6F3-41BC-88C3-4C530F80BD5C][Packages I've found very useful:1]]
Though I'm using a huge number of packages - this list reflects the
absolute core that I consider to be essential to my current /daily/
workflow. This list is being formulated so that I can develop a minimal
Emacs config that can be used for a rapid setup on a headless server.

/Work in progress./

1. org-download
2. org-web-tools
3. org-ref
4. treemacs
5. eyebrowse
6. projectile
7. org-projectile
8. counsel + ivy + swiper
9. Helm (some functions)
10. magit
11. hydra (and other variants)
12. straight.el
# Packages I've found very useful:1 ends here
